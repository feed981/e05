let createApp=Vue.createApp,notyf=new Notyf({duration:3e3,dismissible:!0}),apiCry=axios.create({baseURL:"/api/v1/cry",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")}}),apiKey=axios.create({baseURL:"/api/v1/key",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")}}),apiAuth=axios.create({baseURL:"/api/v1/auth",headers:{"Content-Type":"application/json"}}),encryptionService={async encryptData(e){try{var s=(await apiKey.get("/public")).data,r=CryptoJS.lib.WordArray.random(32),t=r.toString(CryptoJS.enc.Hex),a=forge.pki.publicKeyFromPem(s),o=forge.util.encode64(a.encrypt(t)),c=CryptoJS.lib.WordArray.random(16),i=CryptoJS.AES.encrypt(JSON.stringify(e),r,{mode:CryptoJS.mode.CBC,padding:CryptoJS.pad.Pkcs7,iv:c});return{encryptedKey:o,encryptedData:CryptoJS.enc.Base64.stringify(CryptoJS.lib.WordArray.create(c.words.concat(i.ciphertext.words)))}}catch(e){throw console.error("Encryption failed:",e),new Error("加密失敗: "+e.message)}}};createApp({data(){return{isCrypt:!0,username:"",password:"",itemname:"",errorMessage:"",success:"",successMessage:""}},watch:{isCrypt(e,s){this.clearForm()}},mounted(){this.checkOrGenerateToken()},computed:{format(){return this.isCrypt?"encrypt":"decrypt"}},methods:{async checkOrGenerateToken(){if(!localStorage.getItem("token"))try{var e=(await apiAuth.get("/token")).data;localStorage.setItem("token",e)}catch(e){console.error("無法獲取 token:",e)}axios.interceptors.request.use(e=>{var s=localStorage.getItem("token");return s&&(e.headers.Authorization="Bearer "+s),e})},clearForm(){this.itemname="",this.username="",this.password="",this.successMessage="",this.errorMessage=""},copyText(){this.success&&navigator.clipboard.writeText(this.success.trim()).then(()=>notyf.success("copy success！")).catch(e=>console.error("copy error！",e))},async encrypt(){var e;this.errorMessage="",this.successMessage="",this.itemname&&this.username&&this.password?(e={itemname:this.itemname,username:this.username,password:this.password},e=await encryptionService.encryptData(e),await apiCry.post("/encrypt",{encryptedKey:e.encryptedKey,encryptedData:e.encryptedData}).then(e=>{!0===e.data.success?(this.clearForm(),this.successMessage=`Your ${this.format.toUpperCase()} is
                     `+e.data.data,this.success=e.data.data,notyf.success("encrypt success！")):!1===e.data.success&&(this.errorMessage=e.data.message,this.successMessage="")}).catch(e=>{e.response?(this.errorMessage="服务器内部错误",this.embedUrl="",console.error("Request failed",e.response.data)):e.request?console.error("No response received",e.request):console.error("Error",e.message)})):notyf.error("Please complete all fields！")},async decrypt(){this.errorMessage="",this.successMessage="";var e={itemname:this.itemname,username:this.username,password:this.password},e=await encryptionService.encryptData(e);await apiCry.post("/decrypt",{encryptedKey:e.encryptedKey,encryptedData:e.encryptedData}).then(e=>{!0===e.data.success?(this.clearForm(),this.successMessage=`Your ${this.format.toUpperCase()} is
                    `+e.data.data,this.success=e.data.data,notyf.success("decrypt success！")):!1===e.data.success&&(this.errorMessage=e.data.message,this.successMessage="")}).catch(e=>{e.response?(this.errorMessage="服务器内部错误",this.embedUrl="",console.error("Request failed",e.response.data)):e.request?console.error("No response received",e.request):console.error("Error",e.message)})}}}).mount("#app");